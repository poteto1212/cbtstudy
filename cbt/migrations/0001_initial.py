# Generated by Django 3.0.2 on 2021-06-06 02:49

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zones', models.CharField(max_length=15, verbose_name='ゾーン')),
                ('num', models.IntegerField(blank=True, default=1, null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='ソート用')),
            ],
            options={
                'verbose_name_plural': 'ゾーンと分野の登録',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subjcs', models.CharField(max_length=30, verbose_name='科目')),
                ('subjctsnum', models.IntegerField(blank=True, default=1, null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='ソート用')),
                ('zone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbt.Zone', verbose_name='分野選択')),
            ],
            options={
                'verbose_name_plural': '科目登録',
            },
        ),
        migrations.CreateModel(
            name='Field',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fields', models.CharField(max_length=30, verbose_name='分野')),
                ('fieldnum', models.IntegerField(blank=True, default=1, null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='ソート用')),
                ('subjct', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbt.Subject', verbose_name='科目選択')),
            ],
            options={
                'verbose_name_plural': '領域登録',
            },
        ),
        migrations.CreateModel(
            name='Detail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='概要')),
                ('questionimg', models.ImageField(blank=True, null=True, upload_to='questionimage')),
                ('questiontxt', models.TextField(verbose_name='手書き問題')),
                ('answernum1', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='正答1')),
                ('answernum2', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='正答2')),
                ('answernum3', models.IntegerField(blank=True, default=0, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='正答3')),
                ('answerimg', models.ImageField(blank=True, null=True, upload_to='answerimage')),
                ('answertxt', models.TextField(verbose_name='手書き解説')),
                ('detailimg', models.ImageField(blank=True, null=True, upload_to='detaileimage')),
                ('questionnum', models.IntegerField(blank=True, default=1, null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='ソート用')),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cbt.Field', verbose_name='科目選択')),
                ('relation', models.ManyToManyField(blank=True, null=True, related_name='_detail_relation_+', to='cbt.Detail', verbose_name='関連分野の問題')),
            ],
            options={
                'verbose_name_plural': '出題問題',
            },
        ),
        migrations.AddConstraint(
            model_name='field',
            constraint=models.UniqueConstraint(fields=('subjct', 'fields'), name='subjct_fields_unique'),
        ),
    ]
